vector <int> dijkstra(int V, vector<vector<int>> adj[], int S)
    {
        /*format of input
       0 [[0, 9]] 
       1 [[1, 9]]
       */
       vector<int> dist(V, INT_MAX);
       dist[S] = 0;
       
       priority_queue<pair<int, int>> pq;
       pq.push({0, S});
       
       while(pq.size() > 0){
           
            pair<int, int> curr = pq.top();
            pq.pop();
            int src = curr.second;
            int distS = curr.first;
            
            for(int i = 0; i < adj[src].size(); i++){
                if(distS + adj[src][i][1] < dist[adj[src][i][0]]) {
                    dist[adj[src][i][0]] = distS + adj[src][i][1];
                    
                    pq.push({dist[adj[src][i][0]], adj[src][i][0]});
                }
            }
            
            
       }
       
       return dist;
    }
