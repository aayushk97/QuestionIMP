//We sort the second array then binary search on it for each element of A to find the highest element that is greater than or equal to target. Or we can use upper
//cound function to get the index greater than x and store it in arr.

class Solution{
  public:
    int binarySearch(int arr2[], int target, int n){
        int i = 0, j = n-1;
        
        while(i <= j){
            int mid = i + ( j- i)/2;
            
            if(arr2[mid] <= target) i = mid +1;
            else j = mid - 1;
        }
        
        return j;
    }
    
    vector<int> countEleLessThanOrEqual(int arr1[], int arr2[], 
                                 int m, int n)
    {
    //Your code goes here
        sort(arr2, arr2+n);
        
        vector<int> result;
        
        for(int i = 0; i < m; i ++){
            int x = arr1[i];
            int index = binarySearch(arr2, x, n);
            result.push_back(index+1);
        }
        
        return result;
    }
    
    
    
